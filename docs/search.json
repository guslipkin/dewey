[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gus Lipkin. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lipkin G (2023). dewey: R library variety things. https://dewey.guslipkin./, https://github.com/guslipkin/dewey.","code":"@Manual{,   title = {dewey: An R library for a variety of things},   author = {Gus Lipkin},   year = {2023},   note = {https://dewey.guslipkin.me/, https://github.com/guslipkin/dewey}, }"},{"path":"/index.html","id":"dewey-","dir":"","previous_headings":"","what":"An R library for a variety of things","title":"An R library for a variety of things","text":"R library variety things small collection functions may helpful STATA users regular human beings.","code":""},{"path":"/index.html","id":"install-process","dir":"","previous_headings":"","what":"Install Process","title":"An R library for a variety of things","text":"","code":"install.packages(\"devtools\") devtools::install_github(\"guslipkin/dewey\")"},{"path":"/index.html","id":"regsearch","dir":"","previous_headings":"","what":"regsearch","title":"An R library for a variety of things","text":"(data, dependent, independent, minvar = 1, maxvar, family, topN = 0, interactions = FALSE, multi = FALSE, ...) exhaustive search regression built base R","code":""},{"path":"/index.html","id":"ifelsedata","dir":"","previous_headings":"","what":"ifelsedata","title":"An R library for a variety of things","text":"(x, y, arg = NULL, matchCols = FALSE) Fast data.frame comparisons cell level","code":""},{"path":"/index.html","id":"difffill","dir":"","previous_headings":"","what":"diffFill","title":"An R library for a variety of things","text":"(x, lag = 1, differences = 1, ...) wrapper base diff function returns data.frame length input. Allows vector input lag differences.","code":""},{"path":"/index.html","id":"lagmultiple","dir":"","previous_headings":"","what":"lagMultiple","title":"An R library for a variety of things","text":"(x, k = 1) Appropriately lags input variable returns data.frame length input. Allows vector input k.","code":""},{"path":"/reference/diffFill.html","id":null,"dir":"Reference","previous_headings":"","what":"An extension on `diff` from base R that fills blank space with NA — diffFill","title":"An extension on `diff` from base R that fills blank space with NA — diffFill","text":"extension `diff` base R fills blank space NA","code":""},{"path":"/reference/diffFill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An extension on `diff` from base R that fills blank space with NA — diffFill","text":"","code":"diffFill(x, lag = 1, differences = 1, name = NULL, ...)"},{"path":"/reference/diffFill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An extension on `diff` from base R that fills blank space with NA — diffFill","text":"x numeric vector matrix containing values differenced lag (Optional) integer indicating lag use. `x` vector, `lag` can also vector. Defaults 1 differences (Optional) integer indicating order difference. `x` vector, `differences` can also vector. Defaults 1 name (Optional) name used lagged data.frame. Defaults name variable passed `x`. possible, `name` default \"X\". ... (Optional) arguments passed methods","code":""},{"path":"/reference/diffFill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An extension on `diff` from base R that fills blank space with NA — diffFill","text":"Returns vector length input, otherwise behaves   diff. input matrix, returns   matrix.","code":""},{"path":"/reference/diffFill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An extension on `diff` from base R that fills blank space with NA — diffFill","text":"","code":"# Creating dummy data # for 1 lag and 2 differences diffFill(rnorm(10), 1, 2) #>        x_l1d2 #> 1          NA #> 2          NA #> 3  -1.7841632 #> 4   2.2987715 #> 5  -1.1505453 #> 6  -0.9788177 #> 7   1.6140347 #> 8  -0.9794305 #> 9   2.3675397 #> 10 -2.1359569"},{"path":"/reference/ifelsedata.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast data.frame comparisons at the cell level — ifelsedata","title":"Fast data.frame comparisons at the cell level — ifelsedata","text":"Fast data.frame comparisons cell level","code":""},{"path":"/reference/ifelsedata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast data.frame comparisons at the cell level — ifelsedata","text":"","code":"ifelsedata(x, y, arg = NULL, matchCols = FALSE)"},{"path":"/reference/ifelsedata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast data.frame comparisons at the cell level — ifelsedata","text":"x `data.frame` `matrix` y `data.frame` `matrix` dimensions `x` vector length matching rows `x` length 1. `y` `data.frame` `matrix` dimensions different `x`, larger trimmed match dimensions smaller. arg (Optional) logical test expression including `x` `y`. `arg` included, assumed values `y` logical. matchCols (Optional) boolean determines columns matched based name position. Columns returned order `x`. Columns present `x` returned. Defaults `FALSE`.","code":""},{"path":"/reference/ifelsedata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast data.frame comparisons at the cell level — ifelsedata","text":"Returns data.frame smallest size rows columns.   cells returned `x` test passes `NA`   pass.","code":""},{"path":"/reference/ifelsedata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast data.frame comparisons at the cell level — ifelsedata","text":"","code":"# create dummy data x <- data.frame(matrix(data = sample(1:10, 100, TRUE), nrow = 10, ncol = 10)) y <- data.frame(matrix(data = sample(1:10, 100, TRUE), nrow = 10, ncol = 10))  # test for equality ifelsedata(x, y, \"x >= y | x == y - 2\") #>    X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 #> 1  NA NA  5 NA  8 NA  4  6 NA  NA #> 2  NA NA  7  9  8  4 NA  4 NA   3 #> 3   7  9  8 NA 10  5  7 NA NA   5 #> 4   4 NA  3  3  7  3  5 NA NA   3 #> 5  10  7  9  6  4  9 NA NA 10  10 #> 6  NA  7 10 NA NA  7  6 10 NA   6 #> 7   9 NA NA NA 10 NA NA NA NA  NA #> 8   5 NA 10  5 NA NA  3 NA  6   9 #> 9  NA  1  7  5  4 NA  1  4 NA   5 #> 10 NA NA  6  1 NA  8  2  7 NA  10  # rename x columns colnames(x) <- paste0(\"X\", 5:14) # match with column names ifelsedata(x, y, \"x >= y | x == y - 2\", TRUE) #>    X5 X6 X7 X8 X9 X10 #> 1   4 NA  5 NA NA  NA #> 2   3  8  7  9  8   4 #> 3   7  9  8 NA 10   5 #> 4  NA  3 NA NA  7   3 #> 5  10  7  9  6  4  NA #> 6  NA  7 10 NA NA   7 #> 7   9 NA NA NA 10  NA #> 8  NA NA 10  5 NA   3 #> 9   2 NA  7  5 NA  NA #> 10 NA NA  6 NA NA   8  # match based on booleans in y y <- data.frame(matrix(data = sample(c(TRUE, FALSE), 100, TRUE),                        nrow = 10,                        ncol = 10)) # test based on TRUE/FALSE in y ifelsedata(x, y) #>    X1 X2 X3 X4 X5 X6 X7 X8 X9 X10 #> 1   4 NA  5  1 NA NA  4 NA  3   3 #> 2   3  8  7  9 NA  4  4 NA NA   3 #> 3   7 NA NA  4 10  5 NA  4  1   5 #> 4   4  3 NA  3  7  3 NA NA NA  NA #> 5  10  7  9 NA NA  9  5 NA NA  10 #> 6   3 NA NA  1  1  7 NA 10  2   6 #> 7  NA NA NA  5 10  4 NA  9  2   1 #> 8   5  4 NA NA  2 NA  3 NA  6  NA #> 9  NA NA NA  5 NA NA  1  4 NA  NA #> 10 NA  5  6  1  1  8 NA NA NA  10"},{"path":"/reference/lagMultiple.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute a lagged version of the input data with multiple lags at once — lagMultiple","title":"Compute a lagged version of the input data with multiple lags at once — lagMultiple","text":"Compute lagged version input data multiple lags ","code":""},{"path":"/reference/lagMultiple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute a lagged version of the input data with multiple lags at once — lagMultiple","text":"","code":"lagMultiple(x, k = 1, name = NULL)"},{"path":"/reference/lagMultiple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute a lagged version of the input data with multiple lags at once — lagMultiple","text":"x vector, single column matrix, univariate time series. Can also multi-column matrix `k` length 1. k (Optional) integer vector containing number lags. Defaults 1 name (Optional) name used lagged data.frame. Defaults name variable passed `x`. possible, `name` default \"X\".","code":""},{"path":"/reference/lagMultiple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute a lagged version of the input data with multiple lags at once — lagMultiple","text":"Returns data.frame lagged variable. number rows   length input vector. number columns   number lags used. column retains name original   variable includes number lags used column. `x`   multi-column matrix, returns matrix number columns   names.","code":""},{"path":"/reference/lagMultiple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute a lagged version of the input data with multiple lags at once — lagMultiple","text":"","code":"# Creating dummy data x <- rnorm(10) # for lags 1-5 lagMultiple(x, 1:5) #>          x_l1       x_l2       x_l3       x_l4       x_l5 #> 1  -0.7476876 -2.8779395  0.2954308  0.3315937  0.2573923 #> 2  -2.8779395  0.2954308  0.3315937  0.2573923  1.0833914 #> 3   0.2954308  0.3315937  0.2573923  1.0833914 -1.1901368 #> 4   0.3315937  0.2573923  1.0833914 -1.1901368 -0.8275387 #> 5   0.2573923  1.0833914 -1.1901368 -0.8275387 -2.0116195 #> 6   1.0833914 -1.1901368 -0.8275387 -2.0116195         NA #> 7  -1.1901368 -0.8275387 -2.0116195         NA         NA #> 8  -0.8275387 -2.0116195         NA         NA         NA #> 9  -2.0116195         NA         NA         NA         NA #> 10         NA         NA         NA         NA         NA  # 1 lag with a matrix of dummy data lagMultiple(matrix(1:100, 10, 10), 1) #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    2   12   22   32   42   52   62   72   82    92 #>  [2,]    3   13   23   33   43   53   63   73   83    93 #>  [3,]    4   14   24   34   44   54   64   74   84    94 #>  [4,]    5   15   25   35   45   55   65   75   85    95 #>  [5,]    6   16   26   36   46   56   66   76   86    96 #>  [6,]    7   17   27   37   47   57   67   77   87    97 #>  [7,]    8   18   28   38   48   58   68   78   88    98 #>  [8,]    9   19   29   39   49   59   69   79   89    99 #>  [9,]   10   20   30   40   50   60   70   80   90   100 #> [10,]   NA   NA   NA   NA   NA   NA   NA   NA   NA    NA"},{"path":"/reference/regsearch.html","id":null,"dir":"Reference","previous_headings":"","what":"An exhaustive search regression built on base R — regsearch","title":"An exhaustive search regression built on base R — regsearch","text":"exhaustive search regression built base R","code":""},{"path":"/reference/regsearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An exhaustive search regression built on base R — regsearch","text":"","code":"regsearch(   data,   dependent,   independent,   minvar = 1,   maxvar,   family,   topN = 0,   interactions = FALSE,   multi = FALSE,   ... )"},{"path":"/reference/regsearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An exhaustive search regression built on base R — regsearch","text":"data `data.frame` contains dependent variable independent variables. dependent dependent variable regression. independent vector independent variables used. must match column names `data`. can also include interaction terms made column names `data`. allows specific interaction terms used, rather every possible interaction done `interactions = TRUE`. minvar (Optional) minimum number independent variables used regression. Defaults 1. maxvar maximum number independent variables used regression. Must equal less number independent variables. interaction terms used, count one independent variable. family type regression. Passed `glm`. See glm information. topN (Optional) number top results printed upon run completion. Defaults 0. interactions (Optional) boolean indicating whether interaction terms used. Defaults `FALSE`. multi (Optional) boolean indicating whether multithreading used. Defaults `FALSE`. highly recommended use multithreading. ... (Optional) Function arguments passed glm","code":""},{"path":"/reference/regsearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An exhaustive search regression built on base R — regsearch","text":"Returns `data.table` information regressions run.   resulting data.table sorted descending order rSquare divided   mean p-value. generally reliable pushing quality   regressions top list. `formula` regression formula   used. `aic` aic regression. `rSquare`   calculated r-square regression. `warn` Currently unused. independent variable column contains p-values   variable interaction term given regression.","code":""},{"path":"/reference/regsearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An exhaustive search regression built on base R — regsearch","text":"","code":"# Creating dummy data dt <- data.frame(\"dependent\" = sample(c(0, 1), 100, replace = TRUE), \"ind_1\" = runif(100, 0, 1), \"ind_2\" = runif(100, 0, 1), \"ind_3\" = runif(100, 0, 1), \"ind_4\" = runif(100, 0, 1))  # Without interaction terms and multithreading ## Two top results regsearch(dt, \"dependent\", c(\"ind_1\", \"ind_2\", \"ind_3\", \"ind_4\"), 1, 4, \"binomial\", 2) #> Warning: Missing 'interactions' argument. Defaulting to FALSE. #> Warning: Missing 'multi' argument. Defaulting to FALSE. #> [1] \"Assembling regresions...\" #>    |                                                  | 0 % ~calculating     |+++++++++++++                                     | 25% ~00s             |+++++++++++++++++++++++++                         | 50% ~00s             |++++++++++++++++++++++++++++++++++++++            | 75% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Creating 15 formulas. Please be patient, this may take a while.\" #> [1] \"Creating regressions...\" #>    |                                                  | 0 % ~calculating     |++++                                              | 7 % ~00s             |+++++++                                           | 13% ~00s             |++++++++++                                        | 20% ~00s             |++++++++++++++                                    | 27% ~00s             |+++++++++++++++++                                 | 33% ~00s             |++++++++++++++++++++                              | 40% ~00s             |++++++++++++++++++++++++                          | 47% ~00s             |+++++++++++++++++++++++++++                       | 53% ~00s             |++++++++++++++++++++++++++++++                    | 60% ~00s             |++++++++++++++++++++++++++++++++++                | 67% ~00s             |+++++++++++++++++++++++++++++++++++++             | 73% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 80% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Running 15 regressions. Please be patient, this may take a while.\" #> [1] \"Running regressions...\" #>    |                                                  | 0 % ~calculating     |++++                                              | 7 % ~00s             |+++++++                                           | 13% ~00s             |++++++++++                                        | 20% ~00s             |++++++++++++++                                    | 27% ~00s             |+++++++++++++++++                                 | 33% ~00s             |++++++++++++++++++++                              | 40% ~00s             |++++++++++++++++++++++++                          | 47% ~00s             |+++++++++++++++++++++++++++                       | 53% ~00s             |++++++++++++++++++++++++++++++                    | 60% ~00s             |++++++++++++++++++++++++++++++++++                | 67% ~00s             |+++++++++++++++++++++++++++++++++++++             | 73% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 80% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #>  #> Call: #> glm(formula = as.formula(x), family = family, data = data) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.3959  -1.1790   0.9813   1.1282   1.3229   #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept)  -0.3703     0.4101  -0.903    0.367 #> ind_3         0.8784     0.6983   1.258    0.208 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 138.47  on 99  degrees of freedom #> Residual deviance: 136.86  on 98  degrees of freedom #> AIC: 140.86 #>  #> Number of Fisher Scoring iterations: 4 #>  #>  #> Call: #> glm(formula = as.formula(x), family = family, data = data) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.4502  -1.1651   0.9055   1.1035   1.4229   #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|) #> (Intercept) -0.07553    0.55727  -0.136    0.892 #> ind_3        0.88658    0.70005   1.266    0.205 #> ind_4       -0.57018    0.73359  -0.777    0.437 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 138.47  on 99  degrees of freedom #> Residual deviance: 136.26  on 97  degrees of freedom #> AIC: 142.26 #>  #> Number of Fisher Scoring iterations: 4 #>  #>                                         formula      aic      bic rSquare warn #>  1:                         dependent ~ + ind_3 140.8633 146.0736 0.01160   NA #>  2:                 dependent ~ + ind_3 + ind_4 142.2554 150.0709 0.01599   NA #>  3:         dependent ~ + ind_2 + ind_3 + ind_4 144.1396 154.5603 0.01683   NA #>  4:         dependent ~ + ind_1 + ind_3 + ind_4 144.1381 154.5588 0.01684   NA #>  5: dependent ~ + ind_1 + ind_2 + ind_3 + ind_4 145.9828 159.0086 0.01796   NA #>  6:                 dependent ~ + ind_1 + ind_3 142.7306 150.5461 0.01256   NA #>  7:         dependent ~ + ind_1 + ind_2 + ind_3 144.6417 155.0624 0.01320   NA #>  8:                 dependent ~ + ind_2 + ind_3 142.8051 150.6206 0.01202   NA #>  9:                         dependent ~ + ind_4 141.8828 147.0931 0.00424   NA #> 10:                 dependent ~ + ind_2 + ind_4 143.7967 151.6123 0.00486   NA #> 11:         dependent ~ + ind_1 + ind_2 + ind_4 145.7464 156.1671 0.00522   NA #> 12:                 dependent ~ + ind_1 + ind_4 143.8500 151.6655 0.00447   NA #> 13:                 dependent ~ + ind_1 + ind_2 144.3772 152.1927 0.00067   NA #> 14:                         dependent ~ + ind_1 142.4291 147.6395 0.00029   NA #> 15:                         dependent ~ + ind_2 142.4306 147.6410 0.00028   NA #>     xIntercept     ind_1     ind_2     ind_3     ind_4 #>  1:  0.3665280        NA        NA 0.2084116        NA #>  2:  0.8921873        NA        NA 0.2053472 0.4370135 #>  3:  0.7763798        NA 0.7337777 0.2014097 0.4162863 #>  4:  0.7549996 0.7321361        NA 0.1939778 0.4428424 #>  5:  0.6445021 0.6923333 0.6937056 0.1875941 0.4185253 #>  6:  0.3687387 0.7158062        NA 0.1958860        NA #>  7:  0.3680365 0.6864020 0.7657752 0.1912622        NA #>  8:  0.4010915        NA 0.8093422 0.2057894        NA #>  9:  0.3896291        NA        NA        NA 0.4450619 #> 10:  0.5855425        NA 0.7693800        NA 0.4274535 #> 11:  0.7695240 0.8224612 0.7476326        NA 0.4285380 #> 12:  0.5859843 0.8563932        NA        NA 0.4479596 #> 13:  0.8876248 0.8173163 0.8198533        NA        NA #> 14:  0.9803005 0.8409838        NA        NA        NA #> 15:  0.9728418        NA 0.8439234        NA        NA ## No top results regsearch(dt, \"dependent\", c(\"ind_1\", \"ind_2\", \"ind_3\", \"ind_4\"), 1, 4, \"binomial\", FALSE, FALSE) #> Warning: Missing 'multi' argument. Defaulting to FALSE. #> [1] \"Assembling regresions...\" #>    |                                                  | 0 % ~calculating     |+++++++++++++                                     | 25% ~00s             |+++++++++++++++++++++++++                         | 50% ~00s             |++++++++++++++++++++++++++++++++++++++            | 75% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Creating 15 formulas. Please be patient, this may take a while.\" #> [1] \"Creating regressions...\" #>    |                                                  | 0 % ~calculating     |++++                                              | 7 % ~00s             |+++++++                                           | 13% ~00s             |++++++++++                                        | 20% ~00s             |++++++++++++++                                    | 27% ~00s             |+++++++++++++++++                                 | 33% ~00s             |++++++++++++++++++++                              | 40% ~00s             |++++++++++++++++++++++++                          | 47% ~00s             |+++++++++++++++++++++++++++                       | 53% ~00s             |++++++++++++++++++++++++++++++                    | 60% ~00s             |++++++++++++++++++++++++++++++++++                | 67% ~00s             |+++++++++++++++++++++++++++++++++++++             | 73% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 80% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Running 15 regressions. Please be patient, this may take a while.\" #> [1] \"Running regressions...\" #>    |                                                  | 0 % ~calculating     |++++                                              | 7 % ~00s             |+++++++                                           | 13% ~00s             |++++++++++                                        | 20% ~00s             |++++++++++++++                                    | 27% ~00s             |+++++++++++++++++                                 | 33% ~00s             |++++++++++++++++++++                              | 40% ~00s             |++++++++++++++++++++++++                          | 47% ~00s             |+++++++++++++++++++++++++++                       | 53% ~00s             |++++++++++++++++++++++++++++++                    | 60% ~00s             |++++++++++++++++++++++++++++++++++                | 67% ~00s             |+++++++++++++++++++++++++++++++++++++             | 73% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 80% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #>                                         formula      aic      bic rSquare warn #>  1:                         dependent ~ + ind_3 140.8633 146.0736 0.01160   NA #>  2:                 dependent ~ + ind_3 + ind_4 142.2554 150.0709 0.01599   NA #>  3:         dependent ~ + ind_2 + ind_3 + ind_4 144.1396 154.5603 0.01683   NA #>  4:         dependent ~ + ind_1 + ind_3 + ind_4 144.1381 154.5588 0.01684   NA #>  5: dependent ~ + ind_1 + ind_2 + ind_3 + ind_4 145.9828 159.0086 0.01796   NA #>  6:                 dependent ~ + ind_1 + ind_3 142.7306 150.5461 0.01256   NA #>  7:         dependent ~ + ind_1 + ind_2 + ind_3 144.6417 155.0624 0.01320   NA #>  8:                 dependent ~ + ind_2 + ind_3 142.8051 150.6206 0.01202   NA #>  9:                         dependent ~ + ind_4 141.8828 147.0931 0.00424   NA #> 10:                 dependent ~ + ind_2 + ind_4 143.7967 151.6123 0.00486   NA #> 11:         dependent ~ + ind_1 + ind_2 + ind_4 145.7464 156.1671 0.00522   NA #> 12:                 dependent ~ + ind_1 + ind_4 143.8500 151.6655 0.00447   NA #> 13:                 dependent ~ + ind_1 + ind_2 144.3772 152.1927 0.00067   NA #> 14:                         dependent ~ + ind_1 142.4291 147.6395 0.00029   NA #> 15:                         dependent ~ + ind_2 142.4306 147.6410 0.00028   NA #>     xIntercept     ind_1     ind_2     ind_3     ind_4 #>  1:  0.3665280        NA        NA 0.2084116        NA #>  2:  0.8921873        NA        NA 0.2053472 0.4370135 #>  3:  0.7763798        NA 0.7337777 0.2014097 0.4162863 #>  4:  0.7549996 0.7321361        NA 0.1939778 0.4428424 #>  5:  0.6445021 0.6923333 0.6937056 0.1875941 0.4185253 #>  6:  0.3687387 0.7158062        NA 0.1958860        NA #>  7:  0.3680365 0.6864020 0.7657752 0.1912622        NA #>  8:  0.4010915        NA 0.8093422 0.2057894        NA #>  9:  0.3896291        NA        NA        NA 0.4450619 #> 10:  0.5855425        NA 0.7693800        NA 0.4274535 #> 11:  0.7695240 0.8224612 0.7476326        NA 0.4285380 #> 12:  0.5859843 0.8563932        NA        NA 0.4479596 #> 13:  0.8876248 0.8173163 0.8198533        NA        NA #> 14:  0.9803005 0.8409838        NA        NA        NA #> 15:  0.9728418        NA 0.8439234        NA        NA  # With interaction terms and multithreading regsearch(dt, \"dependent\", c(\"ind_1\", \"ind_2\", \"ind_3\", \"ind_4\"), 1, 4, \"binomial\", TRUE, TRUE) #> Warning: Missing 'multi' argument. Defaulting to FALSE. #> [1] \"Gathering variables...\" #> [1] \"WARNING: Using interaction terms without multithreading may take a very long time\" #>    |                                                  | 0 % ~calculating     |+++++++++                                         | 17% ~00s             |+++++++++++++++++                                 | 33% ~00s             |+++++++++++++++++++++++++                         | 50% ~00s             |++++++++++++++++++++++++++++++++++                | 67% ~00s             |++++++++++++++++++++++++++++++++++++++++++        | 83% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Assembling regresions...\" #>    |                                                  | 0 % ~calculating     |+++++++++++++                                     | 25% ~00s             |+++++++++++++++++++++++++                         | 50% ~00s             |++++++++++++++++++++++++++++++++++++++            | 75% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Creating 385 formulas. Please be patient, this may take a while.\" #> [1] \"Creating regressions...\" #>    |                                                  | 0 % ~calculating     |+                                                 | 1 % ~00s             |++                                                | 2 % ~00s             |++                                                | 3 % ~00s             |+++                                               | 4 % ~00s             |+++                                               | 5 % ~00s             |++++                                              | 6 % ~00s             |++++                                              | 7 % ~00s             |+++++                                             | 8 % ~00s             |+++++                                             | 9 % ~00s             |++++++                                            | 10% ~00s             |++++++                                            | 11% ~00s             |+++++++                                           | 12% ~00s             |+++++++                                           | 13% ~00s             |++++++++                                          | 14% ~00s             |++++++++                                          | 15% ~00s             |+++++++++                                         | 16% ~00s             |+++++++++                                         | 18% ~00s             |++++++++++                                        | 19% ~00s             |++++++++++                                        | 20% ~00s             |+++++++++++                                       | 21% ~00s             |+++++++++++                                       | 22% ~00s             |++++++++++++                                      | 23% ~00s             |++++++++++++                                      | 24% ~00s             |+++++++++++++                                     | 25% ~00s             |+++++++++++++                                     | 26% ~00s             |++++++++++++++                                    | 27% ~00s             |++++++++++++++                                    | 28% ~00s             |+++++++++++++++                                   | 29% ~00s             |+++++++++++++++                                   | 30% ~00s             |++++++++++++++++                                  | 31% ~00s             |++++++++++++++++                                  | 32% ~00s             |+++++++++++++++++                                 | 33% ~00s             |++++++++++++++++++                                | 34% ~00s             |++++++++++++++++++                                | 35% ~00s             |+++++++++++++++++++                               | 36% ~00s             |+++++++++++++++++++                               | 37% ~00s             |++++++++++++++++++++                              | 38% ~00s             |++++++++++++++++++++                              | 39% ~00s             |+++++++++++++++++++++                             | 40% ~00s             |+++++++++++++++++++++                             | 41% ~00s             |++++++++++++++++++++++                            | 42% ~00s             |++++++++++++++++++++++                            | 43% ~00s             |+++++++++++++++++++++++                           | 44% ~00s             |+++++++++++++++++++++++                           | 45% ~00s             |++++++++++++++++++++++++                          | 46% ~00s             |++++++++++++++++++++++++                          | 47% ~00s             |+++++++++++++++++++++++++                         | 48% ~00s             |+++++++++++++++++++++++++                         | 49% ~00s             |++++++++++++++++++++++++++                        | 51% ~00s             |++++++++++++++++++++++++++                        | 52% ~00s             |+++++++++++++++++++++++++++                       | 53% ~00s             |+++++++++++++++++++++++++++                       | 54% ~00s             |++++++++++++++++++++++++++++                      | 55% ~00s             |++++++++++++++++++++++++++++                      | 56% ~00s             |+++++++++++++++++++++++++++++                     | 57% ~00s             |+++++++++++++++++++++++++++++                     | 58% ~00s             |++++++++++++++++++++++++++++++                    | 59% ~00s             |++++++++++++++++++++++++++++++                    | 60% ~00s             |+++++++++++++++++++++++++++++++                   | 61% ~00s             |+++++++++++++++++++++++++++++++                   | 62% ~00s             |++++++++++++++++++++++++++++++++                  | 63% ~00s             |++++++++++++++++++++++++++++++++                  | 64% ~00s             |+++++++++++++++++++++++++++++++++                 | 65% ~00s             |+++++++++++++++++++++++++++++++++                 | 66% ~00s             |++++++++++++++++++++++++++++++++++                | 67% ~00s             |+++++++++++++++++++++++++++++++++++               | 68% ~00s             |+++++++++++++++++++++++++++++++++++               | 69% ~00s             |++++++++++++++++++++++++++++++++++++              | 70% ~00s             |++++++++++++++++++++++++++++++++++++              | 71% ~00s             |+++++++++++++++++++++++++++++++++++++             | 72% ~00s             |+++++++++++++++++++++++++++++++++++++             | 73% ~00s             |++++++++++++++++++++++++++++++++++++++            | 74% ~00s             |++++++++++++++++++++++++++++++++++++++            | 75% ~00s             |+++++++++++++++++++++++++++++++++++++++           | 76% ~00s             |+++++++++++++++++++++++++++++++++++++++           | 77% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 78% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 79% ~00s             |+++++++++++++++++++++++++++++++++++++++++         | 80% ~00s             |+++++++++++++++++++++++++++++++++++++++++         | 81% ~00s             |++++++++++++++++++++++++++++++++++++++++++        | 82% ~00s             |++++++++++++++++++++++++++++++++++++++++++        | 84% ~00s             |+++++++++++++++++++++++++++++++++++++++++++       | 85% ~00s             |+++++++++++++++++++++++++++++++++++++++++++       | 86% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 88% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++     | 89% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++     | 90% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++    | 91% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++    | 92% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 93% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 94% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++  | 95% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++  | 96% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++++ | 97% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++++ | 98% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 99% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #> [1] \"Running 105 regressions. Please be patient, this may take a while.\" #> [1] \"Running regressions...\" #>    |                                                  | 0 % ~calculating     |+                                                 | 2 % ~00s             |++                                                | 4 % ~00s             |+++                                               | 6 % ~00s             |++++                                              | 8 % ~00s             |+++++                                             | 9 % ~00s             |++++++                                            | 11% ~00s             |+++++++                                           | 13% ~00s             |++++++++                                          | 15% ~00s             |+++++++++                                         | 17% ~00s             |++++++++++                                        | 19% ~00s             |+++++++++++                                       | 21% ~00s             |++++++++++++                                      | 23% ~00s             |+++++++++++++                                     | 25% ~00s             |++++++++++++++                                    | 26% ~00s             |+++++++++++++++                                   | 28% ~00s             |++++++++++++++++                                  | 30% ~00s             |+++++++++++++++++                                 | 32% ~00s             |+++++++++++++++++                                 | 34% ~00s             |++++++++++++++++++                                | 36% ~00s             |+++++++++++++++++++                               | 38% ~00s             |++++++++++++++++++++                              | 40% ~00s             |+++++++++++++++++++++                             | 42% ~00s             |++++++++++++++++++++++                            | 43% ~00s             |+++++++++++++++++++++++                           | 45% ~00s             |++++++++++++++++++++++++                          | 47% ~00s             |+++++++++++++++++++++++++                         | 49% ~00s             |++++++++++++++++++++++++++                        | 51% ~00s             |+++++++++++++++++++++++++++                       | 53% ~00s             |++++++++++++++++++++++++++++                      | 55% ~00s             |+++++++++++++++++++++++++++++                     | 57% ~00s             |++++++++++++++++++++++++++++++                    | 58% ~00s             |+++++++++++++++++++++++++++++++                   | 60% ~00s             |++++++++++++++++++++++++++++++++                  | 62% ~00s             |+++++++++++++++++++++++++++++++++                 | 64% ~00s             |++++++++++++++++++++++++++++++++++                | 66% ~00s             |++++++++++++++++++++++++++++++++++                | 68% ~00s             |+++++++++++++++++++++++++++++++++++               | 70% ~00s             |++++++++++++++++++++++++++++++++++++              | 72% ~00s             |+++++++++++++++++++++++++++++++++++++             | 74% ~00s             |++++++++++++++++++++++++++++++++++++++            | 75% ~00s             |+++++++++++++++++++++++++++++++++++++++           | 77% ~00s             |++++++++++++++++++++++++++++++++++++++++          | 79% ~00s             |+++++++++++++++++++++++++++++++++++++++++         | 81% ~00s             |++++++++++++++++++++++++++++++++++++++++++        | 83% ~00s             |+++++++++++++++++++++++++++++++++++++++++++       | 85% ~00s             |++++++++++++++++++++++++++++++++++++++++++++      | 87% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++     | 89% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++    | 91% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++   | 92% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++  | 94% ~00s             |+++++++++++++++++++++++++++++++++++++++++++++++++ | 96% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 98% ~00s             |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% elapsed=00s   #>  #> Call: #> glm(formula = as.formula(x), family = family, data = data) #>  #> Deviance Residuals:  #>     Min       1Q   Median       3Q      Max   #> -1.7175  -1.1595   0.6232   1.1177   1.7527   #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)   #> (Intercept)  -2.1052     0.9394  -2.241   0.0250 * #> ind_1         3.3846     1.5800   2.142   0.0322 * #> ind_3         4.1244     1.6591   2.486   0.0129 * #> ind_1:ind_3  -6.5624     2.9538  -2.222   0.0263 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 138.47  on 99  degrees of freedom #> Residual deviance: 131.29  on 96  degrees of freedom #> AIC: 139.29 #>  #> Number of Fisher Scoring iterations: 4 #>  #>                                                                  formula #>   1:                                           dependent ~ + ind_1*ind_3 #>   2: dependent ~ + ind_1*ind_3 + ind_1*ind_4 + ind_2*ind_4 + ind_3*ind_4 #>   3:                                   dependent ~ + ind_1*ind_3 + ind_4 #>   4:                             dependent ~ + ind_1*ind_3 + ind_2*ind_4 #>   5:               dependent ~ + ind_1*ind_3 + ind_2*ind_4 + ind_3*ind_4 #>  ---                                                                     #> 101:                                         dependent ~ + ind_1 + ind_4 #> 102:                                           dependent ~ + ind_1*ind_2 #> 103:                                         dependent ~ + ind_1 + ind_2 #> 104:                                                 dependent ~ + ind_1 #> 105:                                                 dependent ~ + ind_2 #>           aic      bic rSquare warn xIntercept      ind_1     ind_2       ind_3 #>   1: 139.2910 149.7117 0.05184   NA 0.02502639 0.03217959        NA 0.012922180 #>   2: 144.6172 168.0637 0.08559   NA 0.01849498 0.02207816 0.1408669 0.010643378 #>   3: 140.4754 153.5012 0.05773   NA 0.07642874 0.03004953        NA 0.011541915 #>   4: 142.5344 160.7705 0.07175   NA 0.02989660 0.02719688 0.2023775 0.008885197 #>   5: 143.8707 164.7120 0.07654   NA 0.02694656 0.03024312 0.1756328 0.014838261 #>  ---                                                                            #> 101: 143.8500 151.6655 0.00447   NA 0.58598433 0.85639323        NA          NA #> 102: 146.2243 156.6450 0.00177   NA 0.84141464 0.82769238 0.8246190          NA #> 103: 144.3772 152.1927 0.00067   NA 0.88762482 0.81731626 0.8198533          NA #> 104: 142.4291 147.6395 0.00029   NA 0.98030054 0.84098381        NA          NA #> 105: 142.4306 147.6410 0.00028   NA 0.97284178         NA 0.8439234          NA #>          ind_4 ind_1.ind_2 ind_1.ind_3 ind_1.ind_4 ind_2.ind_3 ind_2.ind_4 #>   1:        NA          NA  0.02630597          NA          NA          NA #>   2: 0.1194667          NA  0.02714215   0.2686235          NA          NA #>   3: 0.3687169          NA  0.02374077          NA          NA          NA #>   4: 0.4163532          NA  0.01957056          NA          NA   0.1690589 #>   5: 0.2563034          NA  0.02129559          NA          NA   0.1460910 #>  ---                                                                       #> 101: 0.4479596          NA          NA          NA          NA          NA #> 102:        NA   0.6961424          NA          NA          NA          NA #> 103:        NA          NA          NA          NA          NA          NA #> 104:        NA          NA          NA          NA          NA          NA #> 105:        NA          NA          NA          NA          NA          NA #>      ind_3.ind_4 ind_3.ind_2 ind_4.ind_2 ind_4.ind_3 #>   1:          NA          NA          NA          NA #>   2:   0.2652395          NA   0.1100001          NA #>   3:          NA          NA          NA          NA #>   4:          NA          NA          NA          NA #>   5:   0.4190323          NA          NA          NA #>  ---                                                 #> 101:          NA          NA          NA          NA #> 102:          NA          NA          NA          NA #> 103:          NA          NA          NA          NA #> 104:          NA          NA          NA          NA #> 105:          NA          NA          NA          NA"}]
